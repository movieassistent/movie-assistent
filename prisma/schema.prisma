datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

generator client {
  provider = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

model UserSettings {
  id              String    @id @default(cuid())
  userId          String    @unique
  user            User      @relation(fields: [userId], references: [id])
  theme           String    @default("movie assistent")
  sidebarPosition String    @default("links")
  startPage       String    @default("dashboard")
  notifications   Json      @default("{\"email\":false,\"push\":false}")
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt

  @@map("user_settings")
}

model User {
  id            String        @id @default(cuid())
  name          String?
  password      String
  role          Role         @default(USER)
  emails        Email[]
  settings      UserSettings?
  accounts      Account[]
  sessions      Session[]
  createdAt     DateTime     @default(now())
  updatedAt     DateTime     @updatedAt
}

model Email {
  id        String   @id @default(cuid())
  email     String   @unique
  userId    String
  primary   Boolean  @default(false)
  verified  Boolean  @default(false)
  user      User     @relation(fields: [userId], references: [id])
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum Role {
  USER
  ADMIN
  SUPERADMIN
}